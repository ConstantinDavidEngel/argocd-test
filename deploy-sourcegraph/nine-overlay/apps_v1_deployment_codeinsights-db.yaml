apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Code Insights Postgres DB instance.
  labels:
    app.kubernetes.io/component: codeinsights-db
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
  name: codeinsights-db
spec:
  minReadySeconds: 100
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: codeinsights-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: codeinsights-db
        deploy: sourcegraph
        group: backend
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_USER
          value: postgres
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRESQL_CONF_DIR
          value: /conf
        image: index.docker.io/sourcegraph/codeinsights-db:insiders@sha256:96d1f482fc372f526317ea62061492e6e742f7e227dbf58243f4a424f045bb03
        name: codeinsights
        ports:
        - containerPort: 5432
          name: codeinsights-db
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: disk
        - mountPath: /conf
          name: codeinsights-conf
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 120
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: codeinsights-db
      - configMap:
          defaultMode: 511
          name: codeinsights-db-conf
        name: codeinsights-conf
